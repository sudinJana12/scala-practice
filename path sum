object Solution {
    def hasPathSum(root: TreeNode, targetSum: Int): Boolean = {
        if(root==null)
        return false;
        var newtargetSum=targetSum-root.value;
        if(root.left==null && root.right==null && newtargetSum==0)
        return true;
        return hasPathSum(root.left,newtargetSum) || hasPathSum(root.right,newtargetSum);
    }

    def pathSum(root:TreeNode,sum:Int,targetSum:Int):Boolean={
        if(root.left==null && root.right==null){
            if(sum==targetSum){
                return true;
            }else{
                return false;
            }
        }else{
        println(sum);
        if(root.left==null){
           return pathSum(root.right,sum+root.value,targetSum);
        }else if(root.right==null){
            return pathSum(root.left,sum+root.value,targetSum);
        }else{
            return pathSum(root.left,sum+root.value,targetSum) || pathSum(root.right,sum+root.value,targetSum);
        }
        }

    }
}
